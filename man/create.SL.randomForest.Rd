% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create.SL.randomForest.R
\name{create.SL.randomForest}
\alias{create.SL.randomForest}
\title{Factory for RandomForest SL wrappers}
\usage{
create.SL.randomForest(tune = list(mtry = c(1, 5, 10), nodesize = c(1, 5, 10),
  maxnodes = "NULL"), env = .GlobalEnv, name_prefix = "SL.randomForest",
  detailed_names = F, verbose = F)
}
\arguments{
\item{tune}{List of hyperparameter settings to test. If specified, each
hyperparameter will need to be defined.}

\item{env}{Environment in which to create the SL.xgboost functions. Defaults
to the global environment.}

\item{name_prefix}{The prefix string for the name of each function that is
generated.}

\item{detailed_names}{Set to T to have the function names include the
parameter configurations.}

\item{verbose}{Display extra details.}
}
\value{
Returns a list with expanded tuneGrid and the names of the created functions.
}
\description{
Create multiple configurations of RandomForest learners based on the desired
combinations of hyperparameters.
}
\examples{

# Create the functions in the global environment.
create_rf = create.SL.randomForest()
create_rf
sl = SuperLearner(Y = Y, X = X, SL.library = create_rf$names, family = binomial())
sl
# Clean up global environment.
do.call(rm, as.list(create_rf$names))

# Customize the mtry parameter.
tune_rf = list(mtry = c(4, 8))
create_rf = create.SL.randomForest(tune = tune_rf, detailed_names = T)
sl = SuperLearner(Y = Y, X = X, SL.library = create_rf$names, family = binomial())

# Create the learners in a custom environment rather than .GlobalEnv.
sl_env = new.env()
create_rf = create.SL.randomForest(env = sl_env)
create_rf
# Attach the environment with the learner functions so SL can access them.
attach(sl_env)
sl = SuperLearner(Y = Y, X = X, SL.library = create_rf$names, family = binomial())
sl
detach(sl_env)

}

